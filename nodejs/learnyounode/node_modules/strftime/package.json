{
  "name": "strftime",
  "description": "strftime for JavaScript",
  "version": "0.9.2",
  "homepage": "http://samhuri.net/proj/strftime",
  "author": {
    "name": "Sami Samhuri",
    "email": "sami@samhuri.net"
  },
  "contributors": [
    {
      "name": "Sami Samhuri",
      "email": "sami@samhuri.net",
      "url": "http://samhuri.net"
    },
    {
      "name": "Andrew Schaaf",
      "email": "andrew@andrewschaaf.com",
      "url": "http://andrewschaaf.com/"
    },
    {
      "name": "Rob Colburn",
      "email": "rob@robcolburn.com",
      "url": "http://robcolburn.com/"
    },
    {
      "name": "Ryan Stafford",
      "url": "http://droffats.net/"
    },
    {
      "name": "Alexandr Nikitin",
      "email": "nikitin.alexandr.a@gmail.com"
    },
    {
      "name": "TJ Holowaychuk",
      "url": "http://tjholowaychuk.com/"
    },
    {
      "name": "John Zwinck",
      "url": "https://github.com/jzwinck"
    },
    {
      "name": "Forbes Lindesay",
      "url": "https://github.com/ForbesLindesay"
    },
    {
      "name": "Ryan Regalado",
      "url": "https://github.com/d48"
    },
    {
      "name": "w0den",
      "url": "https://github.com/w0den"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/samsonjs/strftime.git"
  },
  "bugs": {
    "url": "https://github.com/samsonjs/strftime/issues",
    "email": "sami@samhuri.net"
  },
  "main": "./strftime.js",
  "engines": {
    "node": ">=0.2.0"
  },
  "license": "MIT",
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "readme": "strftime\n========\n\nstrftime for JavaScript. Works in (at least) node.js and browsers. Supports localization and timezones. Most standard specifiers from C are supported as well as some other extensions from Ruby.\n\n\nInstallation\n============\n\n[node](https://nodejs.org):\n\n    npm install strftime\n\n[bower](http://bower.io):\n\n    bower install strftime\n\n[component](https://github.com/componentjs/component):\n\n    component install samsonjs/strftime\n\nOr you can copy [strftime.js](https://github.com/samsonjs/strftime/blob/master/strftime.js) wherever you want to use it, whether that's with a &lt;script&gt; tag or `require` or anything else.\n\nThe New API in 0.9\n==================\n\nThe current version, 0.9, deprecates the older API that exported several functions: `strftimeTZ`, `strftimeUTC`, and `localizedStrftime`. In addition to this the exported function referenced itself as `require('strftime').strftime` or `window.strftime.strftime` for consistency with the other functions. *These functions are deprecated in 0.9 and will be removed in 1.0.*\n\nNow you only need the single object exported and you can create a specialized version of it using the functions `utc()`, `localize(locale)`, and `timezone(offset)`. You can no longer pass in a timezone or locale on each call to `strftime` which is a regression. If you need this let me know and we will add it back into the API.\n\n[More details are available in the changelog](https://github.com/samsonjs/strftime/blob/master/Changelog.md).\n\nUsage\n=====\n\n```JavaScript\n    var strftime = require('strftime') // not required in browsers\n    console.log(strftime('%B %d, %Y %H:%M:%S')) // => April 28, 2011 18:21:08\n    console.log(strftime('%F %T', new Date(1307472705067))) // => 2011-06-07 18:51:45\n```\n\n\nIf you want to localize it:\n\n```JavaScript\n    var strftime = require('strftime') // not required in browsers\n    var it_IT = {\n        days: ['domenica', 'lunedi', 'martedi', 'mercoledi', 'giovedi', 'venerdi', 'sabato'],\n        shortDays: ['dom', 'lun', 'mar', 'mer', 'gio', 'ven', 'sab'],\n        months: ['gennaio', 'febbraio', 'marzo', 'aprile', 'maggio', 'giugno', 'luglio', 'agosto', 'settembre', 'ottobre', 'novembre', 'dicembre'],\n        shortMonths: ['gen', 'feb', 'mar', 'apr', 'mag', 'giu', 'lug', 'ago', 'set', 'ott', 'nov', 'dic'],\n        AM: 'AM',\n        PM: 'PM',\n        am: 'am',\n        pm: 'pm',\n        formats: {\n            D: '%m/%d/%y',\n            F: '%Y-%m-%d',\n            R: '%H:%M',\n            X: '%T',\n            c: '%a %b %d %X %Y',\n            r: '%I:%M:%S %p',\n            T: '%H:%M:%S',\n            v: '%e-%b-%Y',\n            x: '%D'\n        }\n    }\n    var strftimeIT = strftime.localize(it_IT)\n    console.log(strftimeIT('%B %d, %Y %H:%M:%S')) // => aprile 28, 2011 18:21:08\n    console.log(strftimeIT('%B %d, %Y %H:%M:%S', new Date(1307472705067))) // => giugno 7, 2011 18:51:45\n```\n\nTime zones can be passed in as an offset from GMT in minutes.\n\n```JavaScript\n    var strftime = require('strftime') // not required in browsers\n    var strftimePDT = strftime.timezone(-420)\n    var strftimeCEST = strftime.timezone(120)\n    console.log(strftimePDT('%B %d, %y %H:%M:%S', new Date(1307472705067))) // => June 07, 11 11:51:45\n    console.log(strftimeCEST('%F %T', new Date(1307472705067))) // => 2011-06-07 20:51:45\n```\n\nAlternatively you can use the timezone format used by ISO 8601, `+HHMM` or `-HHMM`.\n\n```JavaScript\n    var strftime = require('strftime') // not required in browsers\n    var strftimePDT = strftime.timezone('-0700')\n    var strftimeCEST = strftime.timezone('+0200')\n    console.log(strftimePDT('', new Date(1307472705067))) // => June 07, 11 11:51:45\n    console.log(strftimeCEST('%F %T', new Date(1307472705067))) // => 2011-06-07 20:51:45\n```\n\nSupported Specifiers\n====================\n\nExtensions from Ruby are noted in the following list.\n\nUnsupported specifiers are rendered without the percent sign.\ne.g. `%q` becomes `q`. Use `%%` to get a literal `%` sign.\n\n- A: full weekday name\n- a: abbreviated weekday name\n- B: full month name\n- b: abbreviated month name\n- C: AD century (year / 100), padded to 2 digits\n- c: equivalent to `%a %b %d %X %Y` in en-US (based on locale)\n- D: equivalent to `%m/%d/%y` in en-US (based on locale)\n- d: day of the month, padded to 2 digits (01-31)\n- e: day of the month, padded with a leading space for single digit values (1-31)\n- F: equivalent to `%Y-%m-%d` in en-US (based on locale)\n- H: the hour (24-hour clock), padded to 2 digits (00-23)\n- h: the same as %b (abbreviated month name)\n- I: the hour (12-hour clock), padded to 2 digits (01-12)\n- j: day of the year, padded to 3 digits (001-366)\n- k: the hour (24-hour clock), padded with a leading space for single digit values (0-23)\n- L: the milliseconds, padded to 3 digits [Ruby extension]\n- l: the hour (12-hour clock), padded with a leading space for single digit values (1-12)\n- M: the minute, padded to 2 digits (00-59)\n- m: the month, padded to 2 digits (01-12)\n- n: newline character\n- o: day of the month as an ordinal (without padding), e.g. 1st, 2nd, 3rd, 4th, ...\n- P: \"am\" or \"pm\" in lowercase (Ruby extension, based on locale)\n- p: \"AM\" or \"PM\" (based on locale)\n- R: equivalent to `%H:%M` in en-US (based on locale)\n- r: equivalent to `%I:%M:%S %p` in en-US (based on locale)\n- S: the second, padded to 2 digits (00-60)\n- s: the number of seconds since the Epoch, UTC\n- T: equivalent to `%H:%M:%S` in en-US (based on locale)\n- t: tab character\n- U: week number of the year, Sunday as the first day of the week, padded to 2 digits (00-53)\n- u: the weekday, Monday as the first day of the week (1-7)\n- v: equivalent to `%e-%b-%Y` in en-US (based on locale)\n- W: week number of the year, Monday as the first day of the week, padded to 2 digits (00-53)\n- w: the weekday, Sunday as the first day of the week (0-6)\n- X: equivalent to `%D` in en-US (based on locale)\n- x: equivalent to `%T` in en-US (based on locale)\n- Y: the year with the century\n- y: the year without the century (00-99)\n- Z: the time zone name, replaced with an empty string if it is not found\n- z: the time zone offset from UTC, with a leading plus sign for UTC and zones east\n     of UTC and a minus sign for those west of UTC, hours and minutes follow each\n     padded to 2 digits and with no delimiter between them\n\nFor more detail see `man 3 strftime` as the format specifiers should behave identically. If behaviour differs please [file a bug](https://github.com/samsonjs/strftime/issues/new).\n\nAny specifier can be modified with `-`, `_`, `0`, or `:` as well, as in Ruby. Using `%-` will omit any leading zeroes or spaces, `%_` will force spaces for padding instead of the default, and `%0` will force zeroes for padding. There's some redundancy here as `%-d` and `%e` have the same result, but it solves some awkwardness with formats like `%l`. Using `%:` for time zone offset, as in `%:z` will insert a colon as a delimiter.\n\nContributors\n============\n\n* [Rob Colburn](https://github.com/robcolburn)\n* [Cory Heslip](https://github.com/cheslip)\n* [TJ Holowaychuk](https://github.com/tj)\n* [Forbes Lindesay](https://github.com/ForbesLindesay)\n* [Alexandr Nikitin](https://github.com/alexandrnikitin)\n* [Ryan Regalado](https://github.com/d48)\n* [Sami Samhuri](https://github.com/samsonjs)\n* [Andrew Schaaf](https://github.com/andrewschaaf)\n* [Ryan Stafford](https://github.com/ryanstafford)\n* [w0den](https://github.com/w0den)\n* [John Zwinck](https://github.com/jzwinck)\n\n\nLicense\n=======\n\nCopyright 2010 - 2015 Sami Samhuri sami@samhuri.net\n\n[MIT license](http://sjs.mit-license.org)\n\n",
  "readmeFilename": "Readme.md",
  "_id": "strftime@0.9.2",
  "dist": {
    "shasum": "eb93a3715d014728073343a5d6502afe74d597a9"
  },
  "_from": "strftime@",
  "_resolved": "https://registry.npmjs.org/strftime/-/strftime-0.9.2.tgz"
}
